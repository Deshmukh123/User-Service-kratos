version: '3.7'

services:
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      kratos:
        condition: service_healthy

  kratos-migrate:
    image: oryd/kratos:v1.1.0
    environment:
      - DSN=postgres://postgres:postgres@postgres:5432/kratos?sslmode=disable
    volumes:
      - ./kratos:/etc/config/kratos
    command: migrate sql -e --yes -c /etc/config/kratos/kratos.yml
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  kratos:
    image: oryd/kratos:v1.1.0
    ports:
      - "4433:4433"
      - "4434:4434"
    volumes:
      - ./kratos:/etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml
    environment:
      - DSN=postgres://postgres:postgres@postgres:5432/kratos?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
      kratos-migrate:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:4434/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: kratos
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_data:
    
